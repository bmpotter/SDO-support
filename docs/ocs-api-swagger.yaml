swagger: "2.0"
info:
  description: "[Intel SDO](https://software.intel.com/en-us/secure-device-onboard) (Secure Device Onboard) is a technology that is created by Intel to make it easy and secure to configure edge devices and associate them with an IEAM instance. IEAM has added support for SDO-enabled devices so that the agent will be installed on the device and registered to the IEAM management hub with zero touch (by simply powering on the device).<br><br>Examples of using this API:<br><br>`curl -sS $HZN_SDO_SVC_URL/version && echo`<br>`curl -sS -w %{http_code} -u $HZN_ORG_ID/$HZN_EXCHANGE_USER_AUTH $HZN_SDO_SVC_URL/orgs/$HZN_ORG_ID/vouchers | jq`<br><br>Note: Some of these APIs can also be run via the `hzn` command."
  version: "1.11.5"
  title: "Open Horizon Support for SDO"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "open-horizon-mgmt-hub"
basePath: "/api"
tags:
- name: "version"
  description: "Get version number"
- name: "vouchers"
  description: "Manage device ownership vouchers"
- name: "keys"
  description: "Manager device owner keys"
schemes:
- "https"
- "http"
paths:
  /version:
    get:
      tags:
        - version
      summary: Get SDO Owner Services version
      description: 'Note: This API does not require credentials.'
      operationId: getVersion
      produces:
        - application/text
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Version'
  /orgs/{org-id}/vouchers:
    get:
      tags:
        - vouchers
      summary: Get list of imported voucher IDs
      description: Get list of imported voucher IDs
      operationId: getVouchers
      produces:
        - application/json
      parameters:
        - name: org-id
          in: path
          description: org ID of the vouchers you want
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/VoucherIdList'
        '401':
          description: Invalid credentials
        '403':
          description: Permission denied
    post:
      tags:
        - vouchers
      summary: Import a voucher into the management hub
      description: Import a voucher into the management hub
      operationId: importVoucher
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: org-id
          in: path
          description: org ID of the voucher you are importing
          required: true
          type: string
        - name: body
          in: body
          description: Voucher to be imported
          required: true
          schema:
            $ref: '#/definitions/Voucher'
      responses:
        '201':
          description: Voucher imported
        '400':
          description: Invalid input
        '401':
          description: Invalid credentials
        '403':
          description: Permission denied
        '500':
          description: Unknown error importing voucher
  /orgs/{org-id}/vouchers/{device-id}:
    get:
      tags:
        - vouchers
      summary: Get one imported voucher
      description: Get one imported voucher
      operationId: getVoucher
      parameters:
        - name: org-id
          in: path
          description: org ID of the device you want the voucher for
          required: true
          type: string
        - name: device-id
          in: path
          description: ID of the device you want the voucher for
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Voucher'
        '400':
          description: Invalid voucher id
        '401':
          description: Invalid credentials
        '403':
          description: Permission denied
  /orgs/{org-id}/keys:
    get:
      tags:
        - keys
      summary: Get list of owner public keys
      description: Get list of owner public keys
      operationId: getKeys
      produces:
        - application/json
      parameters:
        - name: org-id
          in: path
          description: org ID of the public keys you want
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/PublicKeyList'
        '401':
          description: Invalid credentials
        '403':
          description: Permission denied
    post:
      tags:
        - keys
      summary: Create an owner key pair
      description: Create an owner key pair in the management hub and return the public keys
      operationId: importKeys
      consumes:
        - application/json
      produces:
        - application/octet-stream
      parameters:
        - name: org-id
          in: path
          description: org ID of the vouchers you want
          required: true
          type: string
        - name: body
          in: body
          description: 'Certificate input values. See https://www.globalsign.com/en/blog/what-is-a-certificate-signing-request-csr'
          required: true
          schema:
            $ref: '#/definitions/KeysCertInput'
      responses:
        '201':
          description: Keys created
          schema:
            $ref: '#/definitions/PublicKeyFile'
        '400':
          description: Invalid input
        '401':
          description: Invalid credentials
        '403':
          description: Permission denied
        '500':
          description: Error importing keys
  /orgs/{org-id}/keys/{key-name}:
    get:
      tags:
        - keys
      summary: Get one public key
      description: Get one public key
      operationId: getPublicKey
      parameters:
        - name: org-id
          in: path
          description: org ID of the public key you want
          required: true
          type: string
        - name: key-name
          in: path
          description: name of key you want (not the full file name)
          required: true
          type: string
      produces:
        - application/octet-stream
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/PublicKeyFile'
        '400':
          description: Invalid key name
        '401':
          description: Invalid credentials
        '403':
          description: Permission denied
    delete:
      tags:
        - keys
      summary: Delete one key pair
      description: Delete one key pair
      operationId: deleteKeyPair
      parameters:
        - name: org-id
          in: path
          description: org ID of the key pair you want to delete
          required: true
          type: string
        - name: key-name
          in: path
          description: name of key you want to delete (not the full file name)
          required: true
          type: string
      responses:
        '204':
          description: successful operation
        '400':
          description: Invalid key name
        '401':
          description: Invalid credentials
        '403':
          description: Permission denied
definitions:
  Version:
    type: string
  Voucher:
    type: object
    properties:
      sz:
        type: integer
        format: int32
      oh:
        type: object
        properties:
          pv:
            type: integer
            format: int32
          pe:
            type: integer
            format: int32
          r:
            type: array
            items:
              type: object
          g:
            type: string
            description: base64 encoded
          d:
            type: string
          pk:
            type: array
            items:
              type: object
      hmac:
        type: array
        items:
          type: object
      en:
        type: array
        items:
          type: object
    xml:
      name: Voucher
  VoucherIdList:
    type: array
    items:
      type: string
      description: voucher device id
  KeysCertInput:
    type: object
    properties:
      key_name:
        type: string
      common_name:
        type: string
      email_name:
        type: string
      company_name:
        type: string
      country_name:
        type: string
      state_name:
        type: string
      locale_name:
        type: string
  PublicKeyFile:
    type: string
  PublicKeyList:
    type: object
    properties:
      myuser:
        type: array
        items:
          type: string
          description: public key file name
externalDocs:
  description: "Find out more about Open Horizon Support for SDO"
  url: "https://github.com/open-horizon/SDO-support"